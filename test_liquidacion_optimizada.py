#!/usr/bin/env python3
"""
Script de prueba para verificar la optimizaci√≥n del Frame de Liquidaci√≥n
- Sin actualizaciones autom√°ticas
- Solo actualizaci√≥n manual con bot√≥n "Generar Liquidaci√≥n"
"""

import tkinter as tk
from tkinter import ttk
import sys
import os

# Agregar el directorio ra√≠z al path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Configurar logging
import logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def main():
    """Funci√≥n principal de prueba"""
    try:
        # Importar el frame de liquidaci√≥n
        from frames.frame_liquidacion import FrameLiquidacion
        
        # Crear ventana principal
        root = tk.Tk()
        root.title("Prueba - Frame Liquidaci√≥n Optimizado")
        root.geometry("1200x800")
        
        # Crear notebook para simular la aplicaci√≥n principal
        notebook = ttk.Notebook(root)
        notebook.pack(fill='both', expand=True, padx=10, pady=10)
        
        # Crear frame de liquidaci√≥n
        frame_liquidacion = FrameLiquidacion(notebook)
        notebook.add(frame_liquidacion, text="üí∞ Liquidaci√≥n")
        
        # Mensaje de instrucciones
        instrucciones = tk.Label(root, 
                                text="üéØ PRUEBA DE OPTIMIZACI√ìN: Cambie empleado/fecha y observe que NO se actualiza autom√°ticamente.\n"
                                     "Solo se actualiza al presionar 'Generar Liquidaci√≥n'",
                                bg='#E0F2FE', fg='#0369A1', font=('Arial', 10, 'bold'),
                                wraplength=800, justify='center')
        instrucciones.pack(side='bottom', fill='x', pady=5)
        
        print("üöÄ Aplicaci√≥n de prueba iniciada")
        print("üìã Instrucciones:")
        print("   1. Seleccione un empleado")
        print("   2. Cambie la fecha")
        print("   3. Observe que los c√°lculos NO se actualizan autom√°ticamente")
        print("   4. Presione 'Generar Liquidaci√≥n' para actualizar")
        print("   5. Observe la ventana de carga 'Generando Liquidaci√≥n'")
        
        # Iniciar aplicaci√≥n
        root.mainloop()
        
    except Exception as e:
        print(f"‚ùå Error al iniciar la prueba: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 